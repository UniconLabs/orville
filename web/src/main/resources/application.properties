########## H2 #########################
spring.datasource.url=jdbc:h2:/tmp/orville
spring.datasource.username=sa
spring.datasource.password=sa
spring.datasource.driverClassName=org.h2.Driver


######### PostgreSQL ##################
#spring.datasource.url=jdbc:postgresql://localhost/orville
#spring.datasource.username=or2
#spring.datasource.password=or2
#spring.datasource.driverClassName=org.postgresql.Driver


#### Oracle
#spring.datasource.url=jdbc:oracle:thin:@tdb:1521:ORCL
#spring.datasource.username=orville
#spring.datasource.password=orville
#spring.datasource.driverClassName=oracle.jdbc.OracleDriver
#spring.hibernate.jdbc.use_get_generated_keys=true

#### Security
# security.user.name=user
# security.user.password=user

#Idmatch related properties
idMatch.baseUrl=
idMatch.username=
idMatch.password=
idMatch.version=
# whether to use preemptive authentication for idMatch
idMatch.preempt=true

#Activation keys
#Default is 14 days. Change as necessary
activationKey.validity.period.days=14


#SSL/TLS
# Set this flag to true to enable SSL connector in the embedded Tomcat instance. false to disable it and use plain HTTP
ssl.enabled=false

#This points to a self-sing cert that needs to be generated first and put into that location. Of course the location and name of the cert file could be changed.
ssl.keystore.file=/etc/openregistry/config/ssl/orville.keystore.p12
ssl.keystore.password=changeit
ssl.keystore.type=PKCS12
ssl.keystore.alias=tomcat
